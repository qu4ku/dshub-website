# Generated by Django 2.2.6 on 2020-05-01 09:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmazonReferralLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amazon_referral_url', models.CharField(help_text='Referral part of the link only (without https://www.amazon.com/', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, help_text='If available the category page will be published online.')),
                ('title', models.CharField(help_text='Title, used in meta tags by default', max_length=200)),
                ('slug', models.SlugField(help_text='Slug for the category subpage.', unique=True)),
                ('headline', models.CharField(blank=True, help_text='Headline/H1 text for the category subpage.', max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text='Description/H2 text for the category subpage.', null=True)),
                ('seo_title', models.CharField(blank=True, help_text='Used in meta title tag if available.', max_length=60, null=True)),
                ('seo_description', models.CharField(blank=True, help_text='Used in meta description tag if available.', max_length=165, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book Category',
                'verbose_name_plural': 'Book Categories',
                'db_table': 'category',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('rating_goodreads', models.CharField(blank=True, default='NA', max_length=20, null=True)),
                ('rating_amazon', models.CharField(blank=True, default='NA', max_length=20, null=True)),
                ('url_goodreads', models.URLField(blank=True, help_text='Url to goodreads.', max_length=250, null=True)),
                ('url', models.URLField(help_text='Url to amazon.', max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('book_image', models.ImageField(upload_to='book-covers/')),
                ('is_active_category', models.BooleanField(default=False, help_text='Is it displayed on category page?')),
                ('is_highlighted_category', models.BooleanField(default=False, help_text='Is it highlighted on main page?')),
                ('is_active_main', models.BooleanField(default=False, help_text='Is it displayed on main page?')),
                ('is_highlighted_main', models.BooleanField(default=False, help_text='Is it highlighted on main page?')),
                ('has_audiobook', models.BooleanField(blank=True, default=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, to='books.BookCategory')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'book',
                'ordering': ('title',),
            },
        ),
    ]
